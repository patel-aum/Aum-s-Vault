name: CI - Build and Push to DockerHub
on:
  push:
    branches:
      - main
      - test-pipeline
    paths-ignore:
      - './backend/older-monolith-backend'
jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services_to_build: ${{ steps.detect_changes.outputs.services }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Detect Changed Services
        id: detect_changes
        run: |
          services=""
          frontend_changes=$(git diff --name-only HEAD~1 | grep "^frontend/" | awk -F/ '{print $1}' | sort | uniq)
          services=$frontend_changes

          backend_changes=$(git diff --name-only HEAD~1 | grep "^backend/" | grep -oP "backend/\K([^/]+)" | grep -v "older-monolith-backend" | sort | uniq)
          if [ ! -z "$backend_changes" ]; then
            services+=" $backend_changes"
          fi
          services=$(echo "$services" | xargs)
          echo "Services to build: $services"
          echo "services=${services}" >> $GITHUB_OUTPUT
  
  build-and-deploy:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.services_to_build != '' }}
    runs-on: ubuntu-latest
    environment: aumsvault
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Images
        run: |
          for service in ${{ needs.detect-changes.outputs.services_to_build }}; do
            if [[ "$service" == "frontend" ]]; then
              echo "Building and pushing frontend image..."
              version=$(grep -oP '(?<=image: patelaum/vaultify-frontend\:v)[0-9]+' k8s/frontend/deployment.yaml | head -1)
              new_version=$((version + 1))
              echo "Incrementing version: v$version -> v$new_version"
              sed -i "s/vaultify-frontend:v${version}/vaultify-frontend:v${new_version}/g" k8s/frontend/deployment.yaml
              
              docker build -t patelaum/vaultify-frontend:v${new_version} frontend/
              docker push patelaum/vaultify-frontend:v${new_version}
            else
              echo "Building and pushing $service image..."
              version=$(grep -oP '(?<=image: patelaum/vaultify-'${service}'\:v)[0-9]+' k8s/${service}/deployment.yaml | head -1)
              new_version=$((version + 1))
              echo "Incrementing version: v$version -> v$new_version"
              sed -i "s/vaultify-${service}:v${version}/vaultify-${service}:v${new_version}/g" k8s/${service}/deployment.yaml
              
              docker build -t patelaum/vaultify-${service}:v${new_version} backend/${service}
              docker push patelaum/vaultify-${service}:v${new_version}
            fi
          done
      
      - name: Commit Updated Deployment Files
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add k8s/**/deployment.yaml
          git commit -m "GITHUB ACTION: Updated deployment files with new versions."
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          branch: ${{ github.ref }}
