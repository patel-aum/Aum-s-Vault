name: CI - Build and Push to DockerHub
on:
  push:
    branches:
      - main
      - test-pipeline
    paths-ignore:
      - './backend/older-monolith-backend'


jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services_to_build: ${{ steps.detect_changes.outputs.services }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Detect Changed Services
        id: detect_changes
        run: |
          services=""

          if git diff --name-only HEAD^ HEAD | grep -q '^frontend/'; then
            services="frontend"
          fi

          for service in backend/*/; do
            service_name=$(basename $service)
            if git diff --name-only HEAD^ HEAD | grep -q "^backend/${service_name}/"; then
              services="$services $service_name"
            fi
          done

          echo "Services to build: $services"
          echo "services=${services}" >> $GITHUB_OUTPUT

  build-and-deploy:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.services_to_build != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Images
        run: |
          for service in ${{ needs.detect-changes.outputs.services_to_build }}; do
            if [[ "$service" == "frontend" ]]; then
              echo "Building and pushing frontend image..."
              docker build -t patelaum/vaultify-frontend:latest frontend/
              docker push patelaum/vaultify-frontend:latest
            else
              echo "Building and pushing $service image..."
              version=$(grep -oP '(?<=image: patelaum/vaultify-'${service}'\:v)[0-9]+' k8s/${service}/deployment.yaml | head -1)
              new_version=$((version + 1))
              echo "Incrementing version: v$version -> v$new_version"
              sed -i "s/vaultify-${service}:v${version}/vaultify-${service}:v${new_version}/g" k8s/${service}/deployment.yaml
              
              docker build -t patelaum/vaultify-${service}:v${new_version} backend/${service}
              docker push patelaum/vaultify-${service}:v${new_version}
            fi
          done

      - name: Commit Updated Deployment Files
        run: |
          git add k8s/**/deployment.yaml
          git commit -m "GITHUB ACTION: Updated deployment files with new versions."
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
