services:
  frontend:
    image: frontend-app
    build:
      context: .
      dockerfile: Dockerfile
    network_mode: "host"
    depends_on:
      - auth-service
      - user-service
      - card-service
      - transactions-service
    environment:
      - AUTH_SERVICE_HOST=localhost
      - AUTH_SERVICE_PORT=5000
      - USER_SERVICE_HOST=localhost
      - USER_SERVICE_PORT=5003
      - CARD_SERVICE_HOST=localhost
      - CARD_SERVICE_PORT=5001
      - TRANSACTIONS_SERVICE_HOST=localhost
      - TRANSACTIONS_SERVICE_PORT=5002

  card-service:
    build:
      context: ./backend/card-service
      dockerfile: Dockerfile
    network_mode: "host"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/aumsvault
      - AUTH_SERVICE_URL=http://localhost:5000
    depends_on:
      - auth-service
      - db

  transactions-service:
    build:
      context: ./backend/transaction-service
      dockerfile: Dockerfile
    network_mode: "host"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/aumsvault
      - AUTH_SERVICE_URL=http://localhost:5000
    depends_on:
      - auth-service
      - db

  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    network_mode: "host"
    environment:
      - JWT_SECRET=your-secret-key-change-in-production
      - AUTH_SERVICE_URL=http://localhost:5000
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/aumsvault
    depends_on:
      - db
      - auth-service

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    network_mode: "host"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/aumsvault
      - JWT_SECRET=your-secret-key-change-in-production
      - NODE_ENV=production
      - PORT=5000
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    network_mode: "host"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=aumsvault
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  adminer:
    image: adminer
    network_mode: "host"
    depends_on:
      - db

volumes:
  postgres_data: